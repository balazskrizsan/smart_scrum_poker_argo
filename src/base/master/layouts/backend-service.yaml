############################### Backend App
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ssp-master
  name: ssp-backend
  labels:
    app: ssp-backend-label
spec:
  replicas: 1
  selector:
    matchLabels:
      service: ssp-backend
  template:
    metadata:
      labels:
        app: ssp-backend-label
        service: ssp-backend
    spec:
#      restartPolicy: Always
      containers:
        - name: ssp-backend
          image: kbalazsworks/smart_scrum_poker_backend_native:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            requests:
              cpu: 200m
              memory: 200Mi
            limits:
              cpu: 400m
              memory: 400Mi
          env:
            - name: spring.profiles.active
              value: native
            - name: NATIVE_REFLECTION_CONFIGURATION_GENERATOR_ENABLED
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: NATIVE_REFLECTION_CONFIGURATION_GENERATOR_ENABLED
            - name: SERVER_ENV
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: SERVER_ENV
            - name: SERVER_PORT
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: SERVER_PORT
            - name: SERVER_SOCKER_FULL_HOST
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: SERVER_SOCKER_FULL_HOST
            - name: SERVER_SSL_ENABLED
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: SERVER_SSL_ENABLED
            - name: SERVER_SSL_KEY_STORE
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: SERVER_SSL_KEY_STORE
            - name: SERVER_SSL_KEY_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: SERVER_SSL_KEY_STORE_PASSWORD
            - name: SITE_DOMAIN
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: SITE_DOMAIN
            - name: SITE_FRONTEND_HOST
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: SITE_FRONTEND_HOST
            - name: SOCKET_IS_ENABLED_SOCKET_CONNECT_AND_DISCONNECT_LISTENERS
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: SOCKET_IS_ENABLED_SOCKET_CONNECT_AND_DISCONNECT_LISTENERS
            - name: SOCKET_MESSAGE_BROKER_STATS_LOGGING_PERIOD_SECONDS
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: SOCKET_MESSAGE_BROKER_STATS_LOGGING_PERIOD_SECONDS
            - name: SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE
            - name: SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: SPRING_DATASOURCE_PASSWORD
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: SPRING_DATASOURCE_URL
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: SPRING_DATASOURCE_USERNAME
---
apiVersion: v1
kind: Service
metadata:
  namespace: ssp-master
  name: ssp-backend
  labels:
    app: ssp-backend-label
    service: ssp-backend
spec:
  type: NodePort
  selector:
    app: ssp-backend-label
    service: ssp-backend
  ports:
    - name: http
      protocol: TCP
      port: 46001
      targetPort: 8080


---
### Backend App - PSQL


apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ssp-master
  name: backend-psql
  labels:
    app: backend-psql-label
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-psql-label
  template:
    metadata:
      labels:
        app: backend-psql-label
    spec:
      containers:
        - name: postgres
          image: postgres:16.2
          ports:
            - containerPort: 5432
          imagePullPolicy: IfNotPresent
          resources: {}
          envFrom:
            - configMapRef:
                name: insecure-psql-config
---
apiVersion: v1
kind: Service
metadata:
  namespace: ssp-master
  name: backend-psql-service
spec:
  type: LoadBalancer
  ports:
    - port: 47030
      targetPort: 5432
  selector:
    app: backend-psql-label
